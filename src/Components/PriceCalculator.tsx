import React, { useState, ChangeEvent } from "react";
import { Button, Input, Select, Flex, Typography, Modal } from "antd";
import { Prices, Service } from "../Helpers/APITypes";

type FieldType = {};

type ServiceCardFieldHandler = (e: ChangeEvent<HTMLInputElement>) => void;

const { Text, Title } = Typography;

const ServiceCard = ({
  service,
  onChangeHandler,
}: {
  service: Service;
  onChangeHandler: ServiceCardFieldHandler;
}) => {
  return (
    <Flex vertical align="start" style={{ width: "80%" }}>
      <Title level={5} style={{ textAlign: "center" }}>
        {service.name}
      </Title>
      <p>{service.description}</p>
      <Input
        id={`${service.id}`}
        type="number"
        placeholder="–∫—ñ–ª—å–∫—ñ—Å—Ç—å"
        min={0}
        style={{ width: "100px" }}
        onChange={onChangeHandler}
      />
    </Flex>
  );
};

const PriceCalculator = ({ prices }: { prices: Prices | null }) => {
  const [state, setState] = useState({
    roomWidth: 0,
    roomLenght: 0,
    material: "",
    services: {},
  });

  const showCalculationResult = ({
    totalCost,
    totalMaterialCost,
    totalServicesCost,
  }: {
    totalCost: number;
    totalMaterialCost: number;
    totalServicesCost: number;
  }) => {
    Modal.info({
      title: "–†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —É—Å–ø—ñ—à–Ω–∏–π!",
      content: (
        <>
          <p style={{ fontSize: 18 }}>
            –ü—Ä–∏–±–ª–∏–∑–Ω–∞ –∑–∞–≥–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å —Ä–æ–±—ñ—Ç —Å–∫–ª–∞–¥–∞—î {totalCost} –∑–ª–æ—Ç–∏—Ö. –ó –Ω–∏—Ö
            –æ—Å–Ω–æ–≤–Ω—ñ –ø–æ—Å–ª—É–≥–∏ - {totalMaterialCost}, –î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ—Å–ª—É–≥–∏ -{" "}
            {totalServicesCost}
          </p>
        </>
      ),
      maskClosable: true,
      footer: <p>–í–¥–∞–ª–∏—Ö –ø–æ–∫—É–ø–æ–∫! üéÅ</p>,
      width: 500,
    });
  };

  function cardInputHandler(e: ChangeEvent<HTMLInputElement>) {
    setState((prevState) => ({
      ...prevState,
      services: { ...prevState.services, [e.target.id]: e.target.value },
    }));
  }

  function roomParamInputHandler(e: ChangeEvent<HTMLInputElement>) {
    setState({ ...state, [e.target.id]: e.target.value });
  }

  function handleSelectChange(value: string) {
    setState({ ...state, material: value });
  }

  //–ø—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ –≤–∞—Ä—Ç–æ—Å—Ç—ñ
  function resultHandler() {
    //–ø–ª–æ—â–∞ –∫—ñ–º–Ω–∞—Ç–∏
    const totalRoomArea = state.roomLenght * state.roomWidth;
    //—Ü—ñ–Ω–∞ –æ–±—Ä–∞–Ω–æ–≥–æ –º–∞—Ç–µ—Ä—ñ–∞–ª—É
    const materialPrice = prices?.ceilingMaterials.find(
      (material) => material.id === Number(state.material)
    )?.price;
    //—Ü—ñ–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞ –∫—ñ–º–Ω–∞—Ç—É
    let totalMaterialCost: number = 0;
    if (materialPrice) {
      totalMaterialCost = totalRoomArea * materialPrice;
    }

    //–∑–∞–≥–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –ø–æ—Å–ª—É–≥
    let totalServicesCost: number = 0;

    //–ø—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ –∑–∞–≥–∞–ª—å–Ω–æ—ó –≤–∞—Ä—Ç–æ—Å—Ç—ñ –æ–±—Ä–∞–Ω–∏—Ö –ø–æ—Å–ª—É–≥
    Object.entries(state.services).forEach(([serviceId, quantity]) => {
      totalServicesCost +=
        prices?.services.find((service) => service.id === Number(serviceId))
          ?.price! * Number(quantity);
    });
    //–∑–∞–≥–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å —Ä–æ–±—ñ—Ç
    let totalCost = totalMaterialCost + totalServicesCost;
    showCalculationResult({ totalCost, totalMaterialCost, totalServicesCost });
  }

  return (
    <>
      <Title level={4}>–û—Å–Ω–æ–≤–∞:</Title>
      <Flex gap={3} align="center" justify="space-around" wrap="wrap">
        <div>
          <Title level={5} style={{ textAlign: "center" }}>
            –î–æ–≤–∂–∏–Ω–∞ –∫—ñ–º–Ω–∞—Ç–∏:
          </Title>
          <Input
            type="number"
            value={state.roomLenght}
            onChange={roomParamInputHandler}
            min={0}
            id="roomLenght"
          />
        </div>
        <div>
          <Title level={5} style={{ textAlign: "center" }}>
            –®–∏—Ä–∏–Ω–∞ –∫—ñ–º–Ω–∞—Ç–∏:
          </Title>
          <Input
            type="number"
            value={state.roomWidth}
            min={0}
            onChange={roomParamInputHandler}
            id="roomWidth"
          />
        </div>
        <div>
          <Title level={5} style={{ textAlign: "center" }}>
            –¢–∏–ø –º–∞—Ç–µ—Ä—ñ–∞–ª—É:
          </Title>
          <Select
            style={{ width: "200px" }}
            options={prices?.ceilingMaterials.map(({ id, name }) => {
              return { value: id, label: name };
            })}
            onChange={handleSelectChange}
          />
        </div>
      </Flex>
      <Title level={4}>–î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ—Å–ª—É–≥–∏:</Title>
      {prices?.services.map((currentService) => (
        <ServiceCard
          key={currentService.id}
          service={currentService}
          onChangeHandler={cardInputHandler}
        />
      ))}
      <Button onClick={resultHandler}>Test</Button>
    </>
  );
};

export default PriceCalculator;
